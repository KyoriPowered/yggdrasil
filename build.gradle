plugins {
  id 'java'
  id 'maven'
  id 'signing'
  id 'net.minecrell.licenser' version '0.3'
}

group 'net.kyori'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

license {
  header project.file('header.txt')
  include '**/*.java'
  newLine false
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://oss.sonatype.org/content/groups/public/'
  }
}

dependencies {
  compile 'com.google.guava:guava:21.0'
  compile 'org.checkerframework:checker-qual:2.5.8'
  testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
  testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

task javadocJar(type: Jar) {
  classifier 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

signing {
  required { !project.version.endsWith('-SNAPSHOT') && gradle.taskGraph.hasTask(':uploadArchives') && project.hasProperty('signing.keyId') }
  sign configurations.archives
}

jar {
  manifest.attributes(
    'Automatic-Module-Name': 'net.kyori.yggdrasil'
  )
}

if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
  uploadArchives {
    enabled = System.getenv('TRAVIS') == null || project.version.endsWith('-SNAPSHOT')

    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
          description 'A library for accessing the Mojang authentication API.'
          name project.name
          url 'https://github.com/KyoriPowered/yggdrasil/'

          developers {
            developer {
              name 'kashike'
            }
          }

          issueManagement {
            system 'GitHub Issues'
            url 'https://github.com/KyoriPowered/yggdrasil/issues'
          }

          licenses {
            license {
              name 'MIT License'
              url 'https://opensource.org/licenses/MIT'
            }
          }

          scm {
            connection 'scm:git@github.com:KyoriPowered/yggdrasil.git'
            developerConnection 'scm:git@github.com:KyoriPowered/yggdrasil.git'
            url 'https://github.com/KyoriPowered/yggdrasil/'
          }
        }
      }
    }
  }
}
